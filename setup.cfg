## More info:
# https://setuptools.readthedocs.io/en/latest/setuptools.html
# https://packaging.python.org/guides/distributing-packages-using-setuptools
# https://www.python.org/dev/peps/pep-0345/#metadata-version

[venv]
extras =
    dev
    tests

[metadata]
url = https://github.com/HeavenVolkoff/prop
name = prop
author = Vítor Vasconcellos
version = 1.1.0b3
license = MPL 2.0
keywords =
    async
    future
    promise
    asyncio
maintainer = Vítor Vasconcellos
description = Promises with opinions for Python 3.6+
classifiers =
    Topic :: Software Development :: Libraries
    Topic :: Software Development :: Libraries :: Python Modules
    License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
    Framework :: AsyncIO
    Intended Audience :: Developers
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    # https://pypi.org/pypi?%3Aaction=list_classifiers
download_url =
project_urls =
    Bug Tracker = https://github.com/HeavenVolkoff/prop/issues
    Source Code = https://github.com/HeavenVolkoff/prop
author_email = vasconcellos.dev@gmail.com
maintainer_email = vasconcellos.dev@gmail.com
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8

[options]
# bool (Indicates whether your package is able to be run from within a zip archive)
zip_safe = True
# list-semi
setup_requires =
    setuptools>=40.1.0
    # List all packages required for installing your package (Running setup.py)
# str (Define python interpreter version requirement)
python_requires = >=3.6
# list-semi
install_requires =
    async_tools @ git+https://github.com/HeavenVolkoff/async_tools.git@v2.0.0
    # List your packages dependencies
# bool (Automatically include any data file, declared inside MANIFEST.in, inside your package.)
# It's recommend to use package_data and exclude_package_data instead, if possible.
include_package_data = False

# Configure find: and find_namespace:
[options.packages.find]
where = src

# Put data files inside package
[options.package_data]
* = VERSION, py.typed
# package_name = files_pattern, ...

# Extra dependencies, can be installed with: `pip install package[extra]`
[options.extras_require]
# extra_name = requirements, ...
dev =
    twine
    black
    isort
    venvtools
    # Put your development requirements here
docs =
    # Put your documentation requirements here
tests =
    asynctest
    coverage
    codecov
    # Put your tests requirements here
